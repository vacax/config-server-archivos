#Indicando el puerto que estar치 utilizando al aplicaci칩n
# el valor en 0, Spring Boot toma un puerto aleatorio.
server.port = ${PUERTO_APP:0}

#indicando la instancia unica para Eureka
eureka.instance.instance-id=${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${random.value}}

#Configuraci칩n para el registro en Eureka indicando la direcci칩n
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://${EUREKA_SERVER:localhost}:8761/eureka

# Exponiendo los endpoints
management.endpoints.web.exposure.include=*

#configuracion de H2
spring.h2.console.enabled=true
spring.h2.console.path=/dbconsole

#Configuracion de la conexion.
spring.datasource.url=jdbc:h2:tcp://${HOST_BD:localhost}:${PUERTO_DB:9092}/~./micro
#spring.datasource.url=jdbc:h2:mem:micro
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=sa
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Nivel del logging
logging.level.org.springframework=ERROR
logging.level.edu.pucmm.=DEBUG

# Patron del logging
logging.pattern.console=%d{HH:mm:ss} [%t] %-5level %logger{36} - %msg%n

# Configuracion del CircuitBreaker
# Indica el muestro estadistico para el porcentaje de fallas.
resilience4j.circuitbreaker.configs.mi-circuito.sliding-window-size=6
#Porcentaje de umbral de error.
resilience4j.circuitbreaker.configs.mi-circuito.failure-rate-threshold=50
#Tiempo qe durara el estado abierto antes de pasar a semiabierto.
resilience4j.circuitbreaker.configs.mi-circuito.wait-duration-in-open-state=3s
# Numero de peticiones de pruebas semiabierto
resilience4j.circuitbreaker.configs.mi-circuito.permitted-number-of-calls-in-half-open-state=4
# Porcenjate de llamadas lentas.
resilience4j.circuitbreaker.configs.mi-circuito.slow-call-rate-threshold=50
# Timpo donde consideramos una llamada lento.
resilience4j.circuitbreaker.configs.mi-circuito.slow-call-duration-threshold=2s
# Nombre de cicuito como lo estaremos llamando en la funcion
resilience4j.circuitbreaker.instances.prueba.base-config=mi-circuito

#Configuracion del limitador.
resilience4j.ratelimiter.configs.mi-limitador.timeout-duration=5s

resilience4j.ratelimiter.instances.prueba.base-config=mi-limitador

